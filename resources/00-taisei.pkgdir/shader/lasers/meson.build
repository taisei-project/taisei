# @overwrite

# @begin header
#
# Text inside @begin/@end blocks is autogenerated by scripts/upkeep/update-glsl-sources.py.
# If this file starts with an @overwrite directive, then its entire contents are managed by the script.
#
# @end header

glsl_files = files(
# @begin glsl
    'sdf_apply.frag.glsl',
    'sdf_apply.vert.glsl',
    'sdf_generate.frag.glsl',
    'sdf_generate.vert.glsl',
# @end glsl
)

subdirs = [
# @begin subdirs
# @end subdirs
]

# @begin validate
if validate_glsl
    foreach src : glsl_files
        fname = '@0@'.format(src)
        stage = fname.split('.')[-2]

        spirv = custom_target('SPIRV_' + fname.underscorify(),
            input : src,
            output : '@BASENAME@.spv',
            command : [
                glslc_command, glslc_args, glslc_depfile_args, get_variable('glslc_@0@_args'.format(stage)),
                '@INPUT@', '-o', '@OUTPUT@'
            ],
            install : false,
            build_by_default : true,
            depfile : '@0@.d'.format(fname.underscorify()),
        )

        spirv_targets += spirv

        if transpile_glsl
            essl = custom_target('ESSL_' + fname.underscorify(),
                input : spirv,
                output : '@BASENAME@.glsl',
                command : [
                    spvc_command,
                    '--output', '@OUTPUT@', '@INPUT@',
                    spvc_args,
                    get_variable('spvc_@0@_args'.format(stage)),
                ],
                install : false,
                build_by_default : true,
                depfile : '@0@.d'.format(fname.underscorify()),
            )

            essl_targets += essl
        endif
    endforeach
endif
# @end validate

foreach sd : subdirs
    subdir(sd)
endforeach

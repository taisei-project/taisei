#!/usr/bin/env python3

# this needs to be run every time
# - there is a new file containing translated strings
# - there is a new bgm or the tags in a bgm change

import argparse
import glob
import subprocess
import json
from pathlib import Path
from taiseilib.common import (
    run_main,
    update_text_file,
    add_common_args,
)

def bgm_tags(filename):
    result = subprocess.run(['ffprobe', '-print_format', 'json', '-show_entries', 'stream_tags', filename], capture_output=True, text=True, check=True)

    return json.loads(result.stdout)['streams'][0]['tags']

def collect_bgm_tags(filenames):
    tags = []

    for filename in sorted(filenames):
        r = bgm_tags(filename)
        tags.append(r['TITLE'])
        tags.append(r['ARTIST'])
        tags.append(r['ALBUM'])
        tags.append(r['comment'])
    return tags

def write_fake_file(output, bgmdir):
    strings = collect_bgm_tags([bgmdir / d for d in glob.iglob('*.opus', root_dir=bgmdir)])

    data = f'''// this is an autogenerated fake-C file to make xgettext pick up some translation strings
{'\n'.join(f'_({json.dumps(s,ensure_ascii=False)})' for s in strings)}\n'''

    update_text_file(output, data)

def main(args):
    parser = argparse.ArgumentParser(description='Generate the POTFILES file for gettext', prog=args[0])
    add_common_args(parser)
    args = parser.parse_args(args[1:])

    podir = Path('po')

    extra_strings = podir / 'extra_strings.c'
    write_fake_file(args.rootdir / extra_strings, args.rootdir / 'resources' / '00-taisei.pkgdir' / 'bgm')

    files = glob.glob('src/**/*.c', root_dir=args.rootdir, recursive=True)
    files += glob.glob('src/**/*.h', root_dir=args.rootdir, recursive=True)
    files.sort()
    files += [str(extra_strings)]

    files = [f for f in files if f != 'src/i18n/i18n.h']

    data = '\n'.join(files) + '\n'
    update_text_file(args.rootdir / podir / 'POTFILES', data)

if __name__ == '__main__':
    run_main(main)
